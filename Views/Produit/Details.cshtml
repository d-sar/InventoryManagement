@model InventoryManagementMVC.Models.ViewModels.ProduitViewModel

@{
    ViewData["Title"] = "Détails du Produit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-eye text-info"></i> @ViewData["Title"]</h2>
    <div>
        <a asp-action="Edit" asp-route-id="@Model.IdProduit" class="btn btn-warning">
            <i class="fas fa-edit"></i> Modifier
        </a>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Retour
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0"><i class="fas fa-info-circle"></i> Informations du Produit</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">ID Produit:</dt>
                    <dd class="col-sm-9">
                        <span class="badge bg-secondary">#@Model.IdProduit</span>
                    </dd>

                    <dt class="col-sm-3">Libellé:</dt>
                    <dd class="col-sm-9">
                        <strong>@Model.Libelle</strong>
                    </dd>

                    <dt class="col-sm-3">Catégorie:</dt>
                    <dd class="col-sm-9">
                        <span class="badge bg-info">@Model.NomCategorie</span>
                    </dd>

                    <dt class="col-sm-3">Description:</dt>
                    <dd class="col-sm-9">
                        @if (string.IsNullOrEmpty(Model.Description))
                        {
                            <em class="text-muted">Aucune description</em>
                        }
                        else
                        {
                            @Model.Description
                        }
                    </dd>

                    <dt class="col-sm-3">Prix Unitaire:</dt>
                    <dd class="col-sm-9">
                        <span class="h5 text-success">@Model.PrixUnitaire.ToString("C")</span>
                    </dd>

                    <dt class="col-sm-3">Quantité en Stock:</dt>
                    <dd class="col-sm-9">
                        <div class="d-flex align-items-center">
                            <span class="h5 me-3">@Model.QuantiteStock</span>
                            @if (Model.QuantiteStock == 0)
                            {
                                <span class="badge bg-danger"><i class="fas fa-times-circle"></i> Rupture de stock</span>
                            }
                            else if (Model.QuantiteStock <= 10)
                            {
                                <span class="badge bg-warning"><i class="fas fa-exclamation-triangle"></i> Stock faible</span>
                            }
                            else
                            {
                                <span class="badge bg-success"><i class="fas fa-check-circle"></i> Stock normal</span>
                            }
                        </div>
                    </dd>

                    <dt class="col-sm-3">Valeur du Stock:</dt>
                    <dd class="col-sm-9">
                        <span class="h5 text-primary">@((Model.QuantiteStock * Model.PrixUnitaire).ToString("C"))</span>
                    </dd>

                    <dt class="col-sm-3">Date de Création:</dt>
                    <dd class="col-sm-9">
                        <i class="fas fa-calendar"></i> @Model.DateCreation.ToString("dddd, dd MMMM yyyy à HH:mm", new System.Globalization.CultureInfo("fr-FR"))
                    </dd>
                </dl>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <!-- Statut du stock -->
        <div class="card mb-3">
            <div class="card-header">
                <h6 class="mb-0"><i class="fas fa-chart-bar"></i> Statut du Stock</h6>
            </div>
            <div class="card-body text-center">
                @if (Model.QuantiteStock == 0)
                {
                    <div class="alert alert-danger">
                        <i class="fas fa-times-circle fa-2x mb-2"></i>
                        <h6>Rupture de Stock</h6>
                        <p class="mb-0">Réapprovisionnement urgent nécessaire</p>
                    </div>
                }
                else if (Model.QuantiteStock <= 10)
                {
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle fa-2x mb-2"></i>
                        <h6>Stock Faible</h6>
                        <p class="mb-0">Pensez à commander bientôt</p>
                    </div>
                }
                else
                {
                    <div class="alert alert-success">
                        <i class="fas fa-check-circle fa-2x mb-2"></i>
                        <h6>Stock Normal</h6>
                        <p class="mb-0">Niveau de stock satisfaisant</p>
                    </div>
                }
            </div>
        </div>

        <!-- Actions rapides -->
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0"><i class="fas fa-cogs"></i> Actions Rapides</h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <button class="btn btn-outline-primary" onclick="updateStock(@Model.IdProduit, @Model.QuantiteStock)">
                        <i class="fas fa-edit"></i> Modifier le Stock
                    </button>
                    <a asp-action="Edit" asp-route-id="@Model.IdProduit" class="btn btn-outline-warning">
                        <i class="fas fa-edit"></i> Modifier le Produit
                    </a>
                    <button class="btn btn-outline-success" onclick="createBonSortie(@Model.IdProduit)">
                        <i class="fas fa-arrow-up"></i> Créer Bon de Sortie
                    </button>
                    <button class="btn btn-outline-info" onclick="createBonEntree(@Model.IdProduit)">
                        <i class="fas fa-arrow-down"></i> Créer Bon d'Entrée
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal pour mise à jour du stock -->
<div class="modal fade" id="stockModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Mettre à jour le stock - @Model.Libelle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="stockForm">
                    <input type="hidden" id="produitId" value="@Model.IdProduit" />
                    <div class="mb-3">
                        <label for="nouvelleQuantite" class="form-label">Nouvelle quantité</label>
                        <input type="number" class="form-control" id="nouvelleQuantite" min="0" value="@Model.QuantiteStock" required>
                        <div class="form-text">Quantité actuelle: @Model.QuantiteStock</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-primary" onclick="saveStock()">Sauvegarder</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateStock(produitId, currentStock) {
            document.getElementById('produitId').value = produitId;
            document.getElementById('nouvelleQuantite').value = currentStock;
            var modal = new bootstrap.Modal(document.getElementById('stockModal'));
            modal.show();
        }

        function saveStock() {
            var produitId = document.getElementById('produitId').value;
            var nouvelleQuantite = document.getElementById('nouvelleQuantite').value;

            fetch('@Url.Action("UpdateStock", "Produit")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id: produitId,
                    nouvelleQuantite: parseInt(nouvelleQuantite)
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Erreur lors de la mise à jour du stock');
                }
            })
            .catch(error => {
                alert('Erreur lors de la mise à jour du stock');
            });
        }

        function createBonSortie(produitId) {
            // Rediriger vers la création d'un bon de sortie avec ce produit
            window.location.href = '@Url.Action("Create", "Bon")?type=sortie&produitId=' + produitId;
        }

        function createBonEntree(produitId) {
            // Rediriger vers la création d'un bon d'entrée avec ce produit
            window.location.href = '@Url.Action("Create", "Bon")?type=entree&produitId=' + produitId;
        }
    </script>
}