@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model IEnumerable<InventoryManagementMVC.Models.ViewModels.ProduitViewModel>

@{
    ViewData["Title"] = "Liste des Produits";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-box text-primary"></i> @ViewData["Title"]</h2>
    <a asp-action="Create" class="btn btn-success">
        <i class="fas fa-plus"></i> Nouveau Produit
    </a>
</div>

<!-- Filtres et Recherche -->
<div class="card mb-4">
    <div class="card-body">
        <form asp-action="Index" method="get">
            <div class="row g-3">
                <div class="col-md-4">
                    <label for="searchString" class="form-label">Rechercher</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" class="form-control" id="searchString" name="searchString"
                               value="@ViewBag.SearchString" placeholder="Nom du produit...">
                    </div>
                </div>
                <div class="col-md-4">
                    <label for="categorieId" class="form-label">Catégorie</label>
                    <select class="form-select" id="categorieId" name="categorieId">
                        <option value="">Toutes les catégories</option>
                        @foreach (var item in (SelectList)ViewBag.Categories)
                        {
                            <option value="@item.Value" selected="@item.Selected">@item.Text</option>
                        }
                    </select>
                </div>
                <div class="col-md-4 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="fas fa-filter"></i> Filtrer
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-times"></i> Effacer
                    </a>
                </div>
                <div class="col-md-4">
                    <label for="filtreStock" class="form-label">Filtrer par stock</label>
                    <select id="filtreStock" name="filtreStock" class="form-select">
                        <option value="">Tous les stocks</option>
                        <option value="faible" selected="@(ViewBag.FiltreStock == "faible")">Stock faible</option>
                        <option value="normal" selected="@(ViewBag.FiltreStock == "normal")">Stock normal</option>
                        <option value="rupture" selected="@(ViewBag.FiltreStock == "rupture")">Rupture de stock</option>
                    </select>
                </div>

            </div>
        </form>
    </div>
</div>

<!-- Statistiques rapides -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4>@Model.Count()</h4>
                        <p class="mb-0">Produits</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-box fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4>@Model.Count(p => p.QuantiteStock > 10)</h4>
                        <p class="mb-0">Stock Normal</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-check-circle fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4>@Model.Count(p => p.QuantiteStock <= 10 && p.QuantiteStock > 0)</h4>
                        <p class="mb-0">Stock Faible</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-exclamation-triangle fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-danger text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4>@Model.Count(p => p.QuantiteStock == 0)</h4>
                        <p class="mb-0">Rupture</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-times-circle fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Table des produits -->
<div class="card">
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Produit</th>
                            <th>Catégorie</th>
                            <th>Prix Unitaire</th>
                            <th>Stock</th>
                            <th>Statut</th>
                            <th width="150">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <div>
                                        <strong>@item.Libelle</strong>
                                        @if (!string.IsNullOrEmpty(item.Description))
                                        {
                                            <br>
                                
                                            <small class="text-muted">@item.Description.Substring(0, Math.Min(50, item.Description.Length))@(item.Description.Length > 50 ? "..." : "")</small>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <span class="badge bg-secondary">@item.NomCategorie</span>
                                </td>
                                <td>
                                    <strong>@item.PrixUnitaire.ToString("C")</strong>
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <span class="me-2">@item.QuantiteStock</span>
                                        
                                    </div>
                                </td>
                                <td>
                                    @if (item.QuantiteStock == 0)
                                    {
                                        <span class="badge bg-danger"><i class="fas fa-times-circle"></i> Rupture</span>
                                    }
                                    else if (item.QuantiteStock <= 10)
                                    {
                                        <span class="badge bg-warning"><i class="fas fa-exclamation-triangle"></i> Stock faible</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success"><i class="fas fa-check-circle"></i> Stock normal</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@item.IdProduit" class="btn btn-sm btn-outline-info" title="Détails">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.IdProduit" class="btn btn-sm btn-outline-warning" title="Modifier">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button class="btn btn-sm" onclick="fichedeStock(@item.IdProduit)">
                                            <i class="fas fa-box"></i>
                                        </button>
                                        <a asp-action="Delete" asp-route-id="@item.IdProduit" class="btn btn-sm btn-outline-danger" title="Supprimer">
                                            <i class="fas fa-trash"></i>
                                        </a>
           
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-box fa-3x text-muted mb-3"></i>
                <h4 class="text-muted">Aucun produit trouvé</h4>
                <p class="text-muted">Commencez par ajouter votre premier produit.</p>
                <a asp-action="Create" class="btn btn-success">
                    <i class="fas fa-plus"></i> Ajouter un produit
                </a>
            </div>
        }
    </div>
</div>

<!-- Modal pour mise à jour du stock -->
<div class="modal fade" id="stockModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Mettre à jour le stock</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="stockForm">
                    <input type="hidden" id="produitId" />
                    <div class="mb-3">
                        <label for="nouvelleQuantite" class="form-label">Nouvelle quantité</label>
                        <input type="number" class="form-control" id="nouvelleQuantite" min="0" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-primary" onclick="saveStock()">Sauvegarder</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateStock(produitId, currentStock) {
            document.getElementById('produitId').value = produitId;
            document.getElementById('nouvelleQuantite').value = currentStock;
            var modal = new bootstrap.Modal(document.getElementById('stockModal'));
            modal.show();
        }

        function saveStock() {
            var produitId = document.getElementById('produitId').value;
            var nouvelleQuantite = document.getElementById('nouvelleQuantite').value;

            fetch('@Url.Action("UpdateStock", "Produit")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                },
                body: JSON.stringify({
                    id: produitId,
                    nouvelleQuantite: parseInt(nouvelleQuantite)
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Erreur lors de la mise à jour du stock');
                }
            })
            .catch(error => {
                alert('Erreur lors de la mise à jour du stock');
            });
        }
        
        function fichedeStock(idProduit) {
            const dateAujourdhui = new Date().toISOString().split('T')[0]; // Format YYYY-MM-DD
            const dateDebut = dateAujourdhui
            const dateFin =  new Date(new Date().setDate(new Date().getDate() + 1)).toISOString().split('T')[0];

            window.location.href = '@Url.Action("Index", "StockHistory")?idProduit=' + idProduit + '&dateDebut=' + dateDebut + '&dateFin=' + dateFin;
        }
    </script>
}