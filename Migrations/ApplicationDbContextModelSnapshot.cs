// <auto-generated />
using System;
using InventoryManagementMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryManagementMVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.Bon", b =>
                {
                    b.Property<int>("IdBon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdBon"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdDocType")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("IdBon");

                    b.HasIndex("IdDocType");

                    b.HasIndex("IdUser");

                    b.ToTable("Bons");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.Categorie", b =>
                {
                    b.Property<int>("IdCategorie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCategorie"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdCategorie");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.DocType", b =>
                {
                    b.Property<int>("IdDocType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDocType"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdDocType");

                    b.ToTable("DocTypes");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.LigneBon", b =>
                {
                    b.Property<int>("IdLigne")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdLigne"));

                    b.Property<int>("IdBon")
                        .HasColumnType("int");

                    b.Property<int>("IdProduit")
                        .HasColumnType("int");

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("IdLigne");

                    b.HasIndex("IdBon");

                    b.HasIndex("IdProduit");

                    b.ToTable("LigneBon");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.Produit", b =>
                {
                    b.Property<int>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdProduit"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("IdCategorie")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantiteStock")
                        .HasColumnType("int");

                    b.HasKey("IdProduit");

                    b.HasIndex("IdCategorie");

                    b.HasIndex("Libelle");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Type").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.Client", b =>
                {
                    b.HasBaseType("InventoryManagementMVC.Models.Entities.User");

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EstActif")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.Fournisseur", b =>
                {
                    b.HasBaseType("InventoryManagementMVC.Models.Entities.User");

                    b.HasDiscriminator().HasValue("Fournisseur");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.Bon", b =>
                {
                    b.HasOne("InventoryManagementMVC.Models.Entities.DocType", "DocType")
                        .WithMany("Bons")
                        .HasForeignKey("IdDocType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryManagementMVC.Models.Entities.User", "Partenaire")
                        .WithMany("Bons")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocType");

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.LigneBon", b =>
                {
                    b.HasOne("InventoryManagementMVC.Models.Entities.Bon", "Bon")
                        .WithMany("LignesBon")
                        .HasForeignKey("IdBon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryManagementMVC.Models.Entities.Produit", "Produit")
                        .WithMany("LignesBon")
                        .HasForeignKey("IdProduit")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bon");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.Produit", b =>
                {
                    b.HasOne("InventoryManagementMVC.Models.Entities.Categorie", "Categorie")
                        .WithMany("Produits")
                        .HasForeignKey("IdCategorie")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.Bon", b =>
                {
                    b.Navigation("LignesBon");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.Categorie", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.DocType", b =>
                {
                    b.Navigation("Bons");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.Produit", b =>
                {
                    b.Navigation("LignesBon");
                });

            modelBuilder.Entity("InventoryManagementMVC.Models.Entities.User", b =>
                {
                    b.Navigation("Bons");
                });
#pragma warning restore 612, 618
        }
    }
}
